Algorithme 10_Exemple_Affectation
Types:
Variables:
	X,Y,A,B,C : réel
	D : caractère
	Z_positif : booléen
Instructions:
	A <- -1
	B <- 1
	C <- 6
	D <- 'f'
	X <- A+3
	Y <- 3*A*X+2*B*X*X-1/2*C
	Z_positif <- Y>=0
	Z_positif <- D < 'c'
	X <- X+1

Algorithme 10_Exemple_LireEcrire
Types:
Variables:
    note, moyenne : réel
Instructions:
	Écrire ("Entrez la valeur de la note 1 (réel entre 0 et 20)" !)
	Lire (clavier ! note)	
	moyenne <- note
	Écrire ("Entrez la valeur de la note 2 (réel entre 0 et 20)" !)
	Lire (clavier ! note)
	moyenne <- moyenne + note
	Écrire ("Entrez la valeur de la note 3 (réel entre 0 et 20)" !)
	Lire (clavier ! note)
	moyenne <- moyenne + note
	moyenne <- moyenne / 3
	Écrire ("La moyenne est de ", moyenne !)



Algorithme TD_1.5_Affectations
Variables:
	A, B, C : caractères
Instructions:
	A <- 'T'
	B <- 'A'
	C <- 'G'
	A <- C
    Ecrire(A,B,C!)


Algorithme TD_1.6_Saisie
Variables:
	fifi, bubu, dada, nono : caractères
Instructions:
	Ecrire("Entrer un entier à 3 chiffres et un mot de 3 lettres"!)
    // L'exercice du TD demande de rentrer 214loi
    Lire(clavier ! fifi)
    Lire(clavier ! bubu)
    Lire(clavier ! dada)
    Lire(clavier ! nono)
    Ecrire(fifi !)
    Ecrire(bubu !)
    Ecrire(dada !)
    Ecrire(nono !)
	Ecrire("Entrer un mot de 3 lettres"!)
    // L'exercice du TD demande de rentrer zen
    Lire(clavier ! fifi)
    Lire(clavier ! bubu)
    Lire(clavier ! dada)
    Ecrire(fifi !)
    Ecrire(bubu !)
    Ecrire(dada !)



Algorithme TD_1.3_1.Absolue
Variables:
	nbr : réel
Instructions:
	Écrire("Entrez un réel" !)
		Lire(clavier ! nbr)
	Si nbr < 0 alors
    	nbr <- -nbr
    FinSi
    Écrire(nbr !)


Algorithme TD_1.3_2.SommeChiffres
Variables:
	nbr, somme, chiffre : entier
Instructions:
	Écrire("Entrez un nombre entier compris entre 0 et 9999" !)
	Lire(clavier ! nbr)
	somme <- 0
	Tant que nbr > 0 faire
		// Récupération du chiffre le plus à droite et ajout à la somme
        chiffre <- nbr % 10
        somme <- somme + chiffre
        // Décale le nombre d’un chiffre sur la droite
        nbr <- E((nbr - chiffre) / 10)
	Fintq
	Écrire("La somme des chiffres est de ", somme !)


Algorithme TD_1.3_3.suite
Variables:
	borneSup, borneInf, n : entier
Instructions:
    Écrire("Entrez un entier représentant la valeur minimale de n" !)
    Lire(clavier ! borneInf )
    Écrire("Entrez un entier représentant la valeur maximale de n" !)
    Lire(clavier ! borneSup)
    Écrire("U<small>n</small> = 5*n+3" !)
    Pour n allant de borneInf à borneSup par pas de 1
    	Écrire("U<small>",n,"</small> = ",(5*n+3) !)
    FinPour
//Cet algorithme utilise des balises html <small></small> servant a afficher le "n" en petit.
//Cependant le language NF04 ne permet pas cela de base et si on essaye ce code sur un autre interpréteur, 
//il affichera directement les balises sans changer la mise en forme du texte (=> ne pas faire ça en partiel)





Algorithme TD_1.3_4.suite
Variables:
	seuil, n : entier
Instructions:
    Écrire("Entrez un entier représentant le seuil A d’arrêt (exemple 1000)" !)
    Lire(clavier ! seuil)
    Écrire("Entrez un entier représentant le rang de départ de n (exemple 0)" !)
    Lire(clavier ! n)
    Écrire("U<small>n</small> = 3*n²+1" !)
    Tant que 3*n*n+1 < seuil faire
    	n <- n+1
    Fintq
    Écrire("Le premier rang est ", n, " car" !)
    Écrire("U<small>", n-1, "</small> = ", 3*(n-1)*(n-1)+1 !)
    Écrire("U<small>", n, "</small> = ", 3*n*n+1 !)
//Cet algorithme utilise des balises html <small></small> servant a afficher le "n" en petit.
//Cependant le language NF04 ne permet pas cela de base et si on essaye ce code sur un autre interpréteur, 
//il affichera directement les balises sans changer la mise en forme du texte (=> ne pas faire ça en partiel)



Algorithme TD_1.3_5.majuscule
Variables:
	caractere : caractère
Instructions:
	Écrire("Entrez un caractère à tester" !)
   	Lire(clavier ! caractere)
	Si caractere >= 'A' ET caractere <= 'Z' alors
		Écrire("Le caractère est une majuscule" !)
    SinonSi caractere >= 'a' ET caractere <= 'z' alors
		Écrire("Le caractère est une minuscule" !)
   	Sinon
		Écrire("Le caractère n’est pas une lettre" !)
	FinSi